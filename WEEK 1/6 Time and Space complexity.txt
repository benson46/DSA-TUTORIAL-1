üìò 5. Time & Space Complexity

    üîπ Time Complexity
        Time complexity is a way to measure how the runtime of an algorithm increases as the size of input increases.

        ‚úÖ It tells you:
        "If my input gets bigger, how much slower will my code run?"

        Common Time Complexities:

        Complexity          | Name                  | Example Code Pattern                              | Behavior (as n grows)
            O(1)            | Constant              | Accessing an element in an array arr[0]           | Always the same time
            O(log n)        | Logarithmic           | Binary Search                                     | Fast even with big inputs
            O(n)            | Linear                | Looping through an array                          | Time grows with input size
            O(n log n)      | Linear Logarithmic    | Merge Sort, Quick Sort                            | Very efficient for sorting
            O(n¬≤)           | Quadratic             | Nested loops                                      | Slower as input grows
            O(2‚Åø)           | Exponential           | Recursive Fibonacci without memoization           | Extremely slow
            O(n!)           | Factorial             | Solving permutations / Traveling Salesman         | Impractical for big inputs


        
        üí° Quick Trick to Guess Time Complexity:

            1 loop ‚Üí O(n)

            2 nested loops ‚Üí O(n¬≤)

            Divide in half each time ‚Üí O(log n)

            Recursive function with multiple calls ‚Üí likely exponential O(2‚Åø) or worse


    üîπ Space Complexity
            Space complexity is a way to measure how much extra memory an algorithm needs based on input size.

            ‚úÖ It answers:
            "How much memory does my code use as the input grows?"

            Examples:
            Storing results in an array ‚Üí O(n)
            Using recursion ‚Üí adds to call stack (memory usage)
            Using no extra memory ‚Üí O(1)

            
            Common Space Complexities:

                Complexity          | Example
                    O(1)            | Swapping variables in-place
                    O(n)            | Using an array to store results
                    O(n¬≤)           | Using a 2D matrix